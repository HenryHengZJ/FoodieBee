{"version":3,"file":"static/webpack/static\\development\\pages\\searchcaterer.js.33c120cd3b520c6a01a1.hot-update.js","sources":["webpack:///./pages/searchcaterer/index.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport  Link  from 'next/link';\r\nimport { Button, Card, CardHeader, CardBody, CardGroup, Col, Container, Form, Modal, ModalBody, ModalHeader, ModalFooter,\r\n  Input, InputGroup, InputGroupAddon, InputGroupText, Row, Label, FormGroup, Popover, PopoverBody, PopoverHeader ,\r\n  Dropdown, DropdownItem, DropdownMenu, DropdownToggle, UncontrolledDropdown, Nav, NavItem, NavLink, Table, Collapse } from 'reactstrap';\r\nimport NavBar from '../../components/NavBar';\r\nimport Footer from '../../components/Footer';\r\nimport Layout from '../../components/Layout';\r\nimport AutoCompleteAddress from '../../components/AutoCompleteAddress'\r\nimport moment from \"moment\";\r\nimport StarRatingComponent from \"react-star-rating-component\";\r\nimport { Calendar } from 'react-date-range';\r\nimport ContentLoader, { Facebook } from \"react-content-loader\";\r\nimport Dotdotdot from \"react-dotdotdot\";\r\nimport axios from \"axios\";\r\nimport apis from \"../../apis\";\r\nimport Router, { withRouter } from 'next/router'\r\nimport { timeRanges } from  \"../../utils\"\r\nimport NextSeo from 'next-seo';\r\n//import fetch from 'isomorphic-unfetch'\r\nimport { server } from '../../config';\r\n//import 'react-date-range/dist/styles.css'; // main style file\r\n//import 'react-date-range/dist/theme/default.css'; // theme css file\r\n\r\n\r\nclass SearchCaterer extends Component {\r\n\r\n  static async getInitialProps({query: { occasion, location, cuisine, price_lte, price_gt, date, time, longitude, latitude, catererName }}) {\r\n\r\n    var url = apis.GETcaterer\r\n    var locationquerystring = \"\";\r\n    var longitudequerystring = \"\";\r\n    var latitudequerystring = \"\";\r\n    var cuisinequerystring = \"\";\r\n    var occasionquerystring = \"\";\r\n    var price_ltequerystring = \"\";\r\n    var price_gtquerystring = \"\";\r\n    var datequerystring = \"\";\r\n    var timequerystring = \"\";\r\n    var catererName_querystring = \"\";\r\n    var selectedPrice = \"All\";\r\n    var selectedDate = \"\";\r\n    var selectedTime = \"\";\r\n    var searchName = \"\";\r\n    var priceAry = [\r\n      \"All\",\r\n      \"50 (or less)\",\r\n      \"100 (or less)\",\r\n      \"200 (or less)\",\r\n      \"300 (or less)\",\r\n      \"500 (or less)\",\r\n      \"More than 500\"\r\n    ];\r\n    var occasionAry = [\r\n      {\r\n        name: \"Breakfast\",\r\n        value: false,\r\n      },\r\n      {\r\n        name: \"Brunch\",\r\n        value: false,\r\n      },\r\n      {\r\n        name: \"Buffet\",\r\n        value: false,\r\n      },\r\n      {\r\n        name: \"Christmas Party\",\r\n        value: false,\r\n      },\r\n      {\r\n        name: \"Dinner\",\r\n        value: false,\r\n      },\r\n      {\r\n        name: \"Event\",\r\n        value: false,\r\n      },\r\n      {\r\n        name: \"Finger Food\",\r\n        value: false,\r\n      },\r\n      {\r\n        name: \"Lunch\",\r\n        value: false,\r\n      },\r\n      {\r\n        name: \"Meeting\",\r\n        value: false,\r\n      },\r\n      {\r\n        name: \"Office Daily\",\r\n        value: false,\r\n      },\r\n      {\r\n        name: \"Wedding\",\r\n        value: false,\r\n      },\r\n      {\r\n        name: \"Snacks\",\r\n        value: false,\r\n      },\r\n    ];\r\n\r\n    if (typeof location !== 'undefined') {\r\n      locationquerystring = \"?location=\" + location\r\n      url = url + locationquerystring\r\n    }\r\n\r\n    if (typeof longitude !== 'undefined') {\r\n      longitudequerystring = \"&longitude=\" + longitude\r\n      url = url + longitudequerystring\r\n    }\r\n\r\n    if (typeof latitude !== 'undefined') {\r\n      latitudequerystring = \"&latitude=\" + latitude\r\n      url = url + latitudequerystring\r\n    }\r\n\r\n    if (typeof cuisine !== 'undefined') {\r\n      cuisinequerystring = \"&cuisine=\" + cuisine\r\n      url = url + cuisinequerystring\r\n    }\r\n\r\n    if (typeof price_lte !== 'undefined') {\r\n      price_ltequerystring = \"&price_lte=\" + price_lte\r\n      url = url + price_ltequerystring\r\n      var priceindex = priceAry.findIndex(x => x.includes(price_lte));\r\n      selectedPrice = priceAry[priceindex]\r\n    }\r\n\r\n    if (typeof price_gt !== 'undefined') {\r\n      price_gtquerystring = \"&price_gt=\" + price_gt\r\n      url = url + price_gtquerystring\r\n      var priceindex = priceAry.findIndex(x => x.includes(price_lte));\r\n      selectedPrice = priceAry[priceindex]\r\n    }\r\n\r\n    if (typeof date !== 'undefined') {\r\n      datequerystring = \"&date=\" + date\r\n      url = url + datequerystring\r\n      selectedDate = date\r\n    }\r\n\r\n    if (typeof time !== 'undefined') {\r\n      timequerystring = \"&time=\" + time\r\n      url = url + timequerystring\r\n      selectedTime = time\r\n    }\r\n\r\n    if (typeof catererName !== 'undefined') {\r\n      catererName_querystring = \"&catererName=\" + catererName\r\n      url = url + catererName_querystring\r\n      searchName = catererName\r\n    }\r\n\r\n    if (typeof occasion !== 'undefined') {\r\n      if (Array.isArray(occasion)) {\r\n        for(var i = 0; i < occasion.length; i++)\r\n        {\r\n          var fixedstr = \"&occasion=\"\r\n          occasionquerystring = occasionquerystring + fixedstr + occasion[i] \r\n\r\n          for(var x = 0; x < occasionAry.length; x++)\r\n          {\r\n            if(occasionAry[x].name === occasion[i])\r\n            {\r\n              occasionAry[x].value = true\r\n            }\r\n          }\r\n        }\r\n        url = url + occasionquerystring\r\n      }\r\n      else {\r\n        for(var i = 0; i < occasionAry.length; i++)\r\n        {\r\n          if(occasionAry[i].name === occasion)\r\n          {\r\n            occasionAry[i].value = true\r\n          }\r\n        }\r\n\r\n        occasionquerystring = \"&occasion=\" + occasion\r\n        url = url + occasionquerystring\r\n      }\r\n    }\r\n\r\n   // console.log(url)\r\n    const res = await axios.get(url);\r\n    const data = await res.data;\r\n    console.log(`Show data fetched. Count: ${data.length}`);\r\n    return {\r\n      locationquerystring: locationquerystring,\r\n      longitudequerystring: longitudequerystring,\r\n      latitudequerystring: latitudequerystring,\r\n      cuisinequerystring: cuisinequerystring,\r\n      occasionquerystring: occasionquerystring,\r\n      price_ltequerystring: price_ltequerystring,\r\n      price_gtquerystring: price_gtquerystring,\r\n      datequerystring: datequerystring,\r\n      timequerystring: timequerystring,\r\n      catererName_querystring: catererName_querystring,\r\n      data: data,\r\n      location: location,\r\n      selectedCuisine: typeof cuisine !== 'undefined' ? cuisine : \"All Cuisines\",\r\n      selectedPrice: selectedPrice,\r\n      occasion: occasionAry,\r\n      selectedTime,\r\n      selectedDate,\r\n      searchName,\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.setState({\r\n      caterer: this.props.data,\r\n      loading: false,\r\n      empty: this.props.data.length > 0 ? false : true,\r\n      location: this.props.location,\r\n      selectedCuisine: this.props.selectedCuisine,\r\n      selectedPrice: this.props.selectedPrice,\r\n      occasion: this.props.occasion,\r\n      locationquerystring: this.props.locationquerystring,\r\n      longitudequerystring: this.props.longitudequerystring,\r\n      latitudequerystring: this.props.latitudequerystring,\r\n      cuisinequerystring: this.props.cuisinequerystring,\r\n      occasionquerystring: this.props.occasionquerystring,\r\n      price_ltequerystring: this.props.price_ltequerystring,\r\n      price_gtquerystring: this.props.price_gtquerystring,\r\n      datequerystring: this.props.datequerystring,\r\n      timequerystring: this.props.timequerystring,\r\n      catererName_querystring: this.props.catererName_querystring,\r\n      selectedTime: this.props.selectedTime !== \"\" ? this.reformatInput(this.props.selectedTime) : \"\",\r\n      selectedDate: this.props.selectedDate,\r\n      searchName: this.props.searchName,\r\n    })\r\n  }\r\n\r\n  reformatInput = (time) => {\r\n    if (time.length > 3 ) {\r\n      time = time.slice(0, 2) + \":\" + time.slice(2, 4)\r\n      \r\n    }\r\n    else {\r\n      time = \"0\" + time.slice(0, 1) + \":\" + time.slice(1, 3)\r\n    }\r\n    return time\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.refObj = React.createRef();\r\n  \r\n    this.state = {\r\n      baseurl: \"/searchcaterer\",\r\n      fullapiurl: \"\",\r\n      locationquerystring: \"\",\r\n      longitudequerystring: \"\",\r\n      latitudequerystring: \"\",\r\n      occasionquerystring: \"\",\r\n      price_ltequerystring: \"\",\r\n      price_gtquerystring: \"\",\r\n      datequerystring: \"\",\r\n      timequerystring: \"\",\r\n      catererName_querystring: \"\",\r\n      location: \"\",\r\n      selectedOccasion: null,\r\n      isMobile: false,\r\n      loading: true,\r\n      empty: false,\r\n      address: \"\",\r\n      price: [\r\n        \"All\",\r\n        \"50 (or less)\",\r\n        \"100 (or less)\",\r\n        \"200 (or less)\",\r\n        \"300 (or less)\",\r\n        \"500 (or less)\",\r\n        \"More than 500\"\r\n      ],\r\n      dietary: [\r\n        {\r\n          name: \"Spicy\",\r\n          value: false,\r\n        }, \r\n        {\r\n          name: \"Hot\",\r\n          value: false,\r\n        },\r\n        {\r\n          name: \"Gluten Free\",\r\n          value: false,\r\n        },\r\n        {\r\n          name: \"Halal\",\r\n          value: false,\r\n        },\r\n        {\r\n          name: \"Healthy\",\r\n          value: false,\r\n        },\r\n        {\r\n          name: \"Vegetarian\",\r\n          value: false,\r\n        },\r\n      ],\r\n      occasion: [\r\n        {\r\n          name: \"Breakfast\",\r\n          value: false,\r\n        },\r\n        {\r\n          name: \"Brunch\",\r\n          value: false,\r\n        },\r\n        {\r\n          name: \"Buffet\",\r\n          value: false,\r\n        },\r\n        {\r\n          name: \"Christmas Party\",\r\n          value: false,\r\n        },\r\n        {\r\n          name: \"Dinner\",\r\n          value: false,\r\n        },\r\n        {\r\n          name: \"Event\",\r\n          value: false,\r\n        },\r\n        {\r\n          name: \"Finger Food\",\r\n          value: false,\r\n        },\r\n        {\r\n          name: \"Lunch\",\r\n          value: false,\r\n        },\r\n        {\r\n          name: \"Meeting\",\r\n          value: false,\r\n        },\r\n        {\r\n          name: \"Office Daily\",\r\n          value: false,\r\n        },\r\n        {\r\n          name: \"Wedding\",\r\n          value: false,\r\n        },\r\n        {\r\n          name: \"Snacks\",\r\n          value: false,\r\n        },\r\n      ],\r\n      caterer: [],\r\n      cuisine: [\r\n        \"All Cuisines\",\r\n        \"Sandwich\",\r\n        \"Irish\",\r\n        \"Asian\",\r\n        \"American\",\r\n        \"Burgers\",\r\n        \"Caribbean\",\r\n        \"Chinese\",\r\n        \"Dessert\",\r\n        \"Drinks\",\r\n        \"English\",\r\n        \"French\",\r\n        \"Greek\",\r\n        \"Halal\",\r\n        \"Indian\",\r\n        \"Italian\",\r\n        \"Japanese\",\r\n        \"Mexican\",\r\n        \"Middle Eastern\",\r\n        \"Pizza\",\r\n        \"Salad\",\r\n        \"Thai\",\r\n        \"Vegetarian Friendly\"\r\n      ],\r\n      filterArray: [],\r\n      selectedCuisine: null,\r\n      selectedPrice: null,\r\n      selectedTime: \"\",\r\n      selectedDate: \"\",\r\n      searchName: \"\",\r\n      maxDate: null,\r\n      cuisineDropDownOpen: false,\r\n      dropDownAddress: false,\r\n      dropDownDate: false,\r\n      isSearchBarOpen: false,\r\n      filterModalOpen: false,\r\n      timeEmptyPopoverOpen: false,\r\n      dateEmptyPopoverOpen: false,\r\n      mobile_timeEmptyPopoverOpen: false,\r\n      mobile_dateEmptyPopoverOpen: false,\r\n    }\r\n\r\n    this.time  = timeRanges();\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n  //  this.getDataFromDb();\r\n\r\n    console.log(\"mount did mount\")\r\n  \r\n    var currentDate = moment().toDate();\r\n    this.setState({\r\n      maxDate: currentDate,\r\n    });\r\n\r\n    if (window.innerWidth < 900) {\r\n      this.setState({\r\n        isMobile: true\r\n      });\r\n    }\r\n\r\n    window.addEventListener(\r\n      \"resize\",\r\n      () => {\r\n        this.setState({\r\n          isMobile: window.innerWidth < 900\r\n        });\r\n      },\r\n      false\r\n    );\r\n\r\n\r\n   /* Router.events.on(\"routeChangeComplete\", () => {\r\n      this.setState({\r\n        loading: false,\r\n        caterer: this.props.data,\r\n        empty: this.props.data.length > 0 ? false : true,\r\n        location: this.props.location,\r\n        locationquerystring: this.props.locationquerystring,\r\n        longitudequerystring: this.props.longitudequerystring,\r\n        latitudequerystring: this.props.latitudequerystring,\r\n        occasionquerystring: this.props.occasionquerystring,\r\n        cuisinequerystring: this.props.cuisinequerystring,\r\n        price_ltequerystring: this.props.price_ltequerystring,\r\n        price_gtquerystring: this.props.price_gtquerystring,\r\n        datequerystring: this.props.datequerystring,\r\n        timequerystring: this.props.timequerystring,\r\n        catererName_querystring: this.props.catererName_querystring,\r\n      });\r\n    });*/\r\n\r\n  }\r\n\r\n  getDataFromDb = (url) => {\r\n\r\n    axios.get(url)\r\n    .then((response) => {\r\n\r\n      var data = response.data;\r\n     // console.log(data)\r\n      this.setState({\r\n        caterer: data,\r\n        loading: false,\r\n        empty: data.length > 0 ? false : true\r\n      })\r\n    })\r\n    .catch(err => {\r\n      // console.log(err)\r\n       this.setState({\r\n        loading: false,\r\n        empty: true\r\n      })\r\n    });\r\n  };\r\n\r\n  findOccasionIndex = () => {\r\n    var selectedOccasion = this.state.selectedOccasion\r\n\r\n    var occasion = this.state.occasion.slice()\r\n\r\n    if (Array.isArray(selectedOccasion)) {\r\n      for(var x = 0; x < selectedOccasion.length; x++)\r\n      {\r\n        for(var i = 0; i < occasion.length; i++)\r\n        {\r\n          if(occasion[i].name === selectedOccasion[x])\r\n          {\r\n            occasion[i].value = true\r\n          }\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      for(var i = 0; i < occasion.length; i++)\r\n      {\r\n        if(occasion[i].name === selectedOccasion)\r\n        {\r\n          occasion[i].value = true\r\n        }\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      occasion,\r\n    })\r\n\r\n  }\r\n\r\n  signIn(e) {\r\n    e.preventDefault()\r\n\r\n    var url = this.state.baseurl;\r\n    var locationquerystring = this.state.locationquerystring;\r\n    var longitudequerystring = this.state.longitudequerystring;\r\n    var latitudequerystring = this.state.latitudequerystring;\r\n    var cuisinequerystring = this.state.cuisinequerystring;\r\n    var occasionquerystring = this.state.occasionquerystring;\r\n    var price_ltequerystring = this.state.price_ltequerystring;\r\n    var price_gtquerystring = this.state.price_gtquerystring;\r\n    var datequerystring = this.state.datequerystring;\r\n    var timequerystring = this.state.timequerystring;\r\n    var catererName_querystring = this.state.catererName_querystring;\r\n \r\n    url = url + locationquerystring + longitudequerystring + latitudequerystring + cuisinequerystring + occasionquerystring + price_gtquerystring + price_ltequerystring + datequerystring + timequerystring + catererName_querystring; \r\n\r\n    Router.push({\r\n      pathname: '/login',\r\n      query: {'returnurl': url}\r\n    })\r\n  }\r\n\r\n  toggleDropDown = () => {\r\n    this.setState({\r\n      dropDownDate: !this.state.dropDownDate,\r\n      dateEmptyPopoverOpen: false,\r\n      mobile_dateEmptyPopoverOpen: false,\r\n    })\r\n  }\r\n\r\n  toggleDropDownAddress = () => {\r\n    this.setState({\r\n      dropDownAddress: !this.state.dropDownAddress\r\n    })\r\n  }\r\n\r\n  searchBarToggle = () => {\r\n    this.setState({\r\n      isSearchBarOpen: !this.state.isSearchBarOpen\r\n    })\r\n  }\r\n\r\n  showPlaceDetails(address) {\r\n    this.setState({ address });\r\n  }\r\n\r\n  saveAddress = () => {\r\n    var address = this.state.address\r\n    \r\n    if (address !== null && address != \"\") {\r\n      var city = address.address_components[1].long_name\r\n      var formatted_address = address.formatted_address\r\n      var url = this.state.baseurl;\r\n      var locationquerystring = \"?location=\" + formatted_address;\r\n      var longitudequerystring = \"&longitude=\" + address.geometry.location.lng();\r\n      var latitudequerystring = \"&latitude=\" + address.geometry.location.lat();\r\n      var cuisinequerystring = this.state.cuisinequerystring;\r\n      var occasionquerystring = this.state.occasionquerystring;\r\n      var price_ltequerystring = this.state.price_ltequerystring;\r\n      var price_gtquerystring = this.state.price_gtquerystring;\r\n      var datequerystring = this.state.datequerystring;\r\n      var timequerystring = this.state.timequerystring;\r\n      var catererName_querystring = this.state.catererName_querystring;\r\n\r\n      url = url + locationquerystring + longitudequerystring + latitudequerystring + cuisinequerystring + occasionquerystring + price_ltequerystring + price_gtquerystring + datequerystring + timequerystring + catererName_querystring;\r\n      var fullapiurl = apis.GETcaterer + locationquerystring + longitudequerystring + latitudequerystring + cuisinequerystring + occasionquerystring + price_gtquerystring + price_ltequerystring + datequerystring + timequerystring + catererName_querystring;\r\n      \r\n      this.setState({\r\n        dropDownAddress: ! this.state.dropDownAddress,\r\n        loading: true,\r\n        location: formatted_address,\r\n        locationquerystring,\r\n        longitudequerystring,\r\n        latitudequerystring,\r\n        cuisinequerystring,\r\n        occasionquerystring,\r\n        price_ltequerystring,\r\n        price_gtquerystring,\r\n        datequerystring,\r\n        timequerystring,\r\n        catererName_querystring,\r\n        fullapiurl,\r\n      },() => {\r\n        var selectedAddress = {\r\n          formatted_address: formatted_address,\r\n          longitude: address.geometry.location.lng(),\r\n          latitude: address.geometry.location.lat()\r\n        }\r\n        sessionStorage.setItem('selectedAddress', JSON.stringify(selectedAddress));\r\n        Router.replace(url, url, { shallow: true })\r\n        this.getDataFromDb(fullapiurl)\r\n      })\r\n    }\r\n  };\r\n\r\n  navItemClicked = selectedCuisine => {\r\n    this.setState({\r\n      selectedCuisine: selectedCuisine,\r\n      cuisineDropDownOpen: false\r\n    }, () => {\r\n      this.handleUrlChange('cuisine');\r\n    })\r\n  };\r\n\r\n  catererClicked = (_id) => {\r\n    if (this.state.selectedDate !== \"\" && this.state.selectedTime !== \"\") {\r\n      Router.push(`/catererdetail/${_id}`, `/catererdetail/${_id}`)\r\n    }\r\n    else {\r\n      if (this.state.selectedDate === \"\") {\r\n        if (this.state.isMobile) {\r\n          this.setState({\r\n            mobile_dateEmptyPopoverOpen: true,\r\n            isSearchBarOpen: true\r\n          })\r\n        }\r\n        else {\r\n          this.setState({\r\n            dateEmptyPopoverOpen: true\r\n          })\r\n        }\r\n      }\r\n      else if (this.state.selectedTime === \"\") {\r\n        if (this.state.isMobile) {\r\n          this.setState({\r\n            mobile_timeEmptyPopoverOpen: true,\r\n            isSearchBarOpen: true\r\n          })\r\n        }\r\n        else {\r\n          this.setState({\r\n            timeEmptyPopoverOpen: true\r\n          })\r\n        }\r\n      }\r\n      this.refObj.current.scrollIntoView({behavior: 'smooth'});\r\n    }\r\n  };\r\n\r\n  handleTimeChange(e) {\r\n    this.setState({ \r\n      selectedTime: e.target.value,\r\n      timeEmptyPopoverOpen: false,\r\n      mobile_timeEmptyPopoverOpen: false\r\n    },() => {\r\n      var selectedTime = Number(this.state.selectedTime.replace(\":\", \"\"))\r\n      this.handleTimeSearch(selectedTime)\r\n      sessionStorage.setItem('selectedTime', this.state.selectedTime);\r\n    })\r\n  }\r\n\r\n  handlePriceChange = event => {\r\n    this.setState(\r\n      {\r\n        selectedPrice: event.target.value \r\n      }, () => {\r\n        this.handleUrlChange('pricerange')\r\n      }\r\n    );\r\n  };\r\n\r\n  handleCuisineChange = event => {\r\n    this.setState(\r\n      { \r\n        selectedCuisine: event.target.value \r\n      }, () => {\r\n        this.handleUrlChange('cuisine');\r\n      }\r\n    )\r\n  };\r\n\r\n  handleCheckBoxChange = (index, statename, event) => {\r\n\r\n    var newArray = this.state[statename]\r\n\r\n    if (newArray[index].value) {\r\n      newArray[index].value = false\r\n    }\r\n    else {\r\n      newArray[index].value = true\r\n    }\r\n   \r\n    this.setState(\r\n      { \r\n        [statename]: newArray \r\n      }, () => {\r\n        if (statename === \"occasion\") {\r\n          this.handleUrlChange('occasion')\r\n        }\r\n      }\r\n    )\r\n  };\r\n\r\n  searchNameClicked = () => {\r\n    var url = this.state.baseurl;\r\n    var searchName = this.state.searchName\r\n    var locationquerystring = this.state.locationquerystring;\r\n    var longitudequerystring = this.state.longitudequerystring;\r\n    var latitudequerystring = this.state.latitudequerystring;\r\n    var cuisinequerystring = this.state.cuisinequerystring;\r\n    var occasionquerystring = this.state.occasionquerystring;\r\n    var price_ltequerystring = this.state.price_ltequerystring;\r\n    var price_gtquerystring = this.state.price_gtquerystring;\r\n    var datequerystring = this.state.datequerystring;\r\n    var timequerystring = this.state.timequerystring;\r\n    var catererName_querystring = this.state.catererName_querystring;\r\n    \r\n    if (searchName === \"\") {\r\n      catererName_querystring = \"\"\r\n    }\r\n    else {\r\n      catererName_querystring = \"&catererName=\" + searchName;\r\n    }\r\n \r\n    url = url + locationquerystring + longitudequerystring + latitudequerystring + cuisinequerystring + occasionquerystring + price_gtquerystring + price_ltequerystring + datequerystring + timequerystring + catererName_querystring; \r\n    var fullapiurl = apis.GETcaterer + locationquerystring + longitudequerystring + latitudequerystring + cuisinequerystring + occasionquerystring + price_gtquerystring + price_ltequerystring + datequerystring + timequerystring + catererName_querystring;\r\n\r\n    this.setState({\r\n      loading: true,\r\n      locationquerystring,\r\n      longitudequerystring,\r\n      latitudequerystring,\r\n      cuisinequerystring,\r\n      occasionquerystring,\r\n      price_ltequerystring,\r\n      price_gtquerystring,\r\n      datequerystring,\r\n      timequerystring,\r\n      catererName_querystring,\r\n      fullapiurl,\r\n    },() => {\r\n      this.getDataFromDb(fullapiurl)\r\n      Router.replace(url, url, { shallow: true })\r\n    })\r\n  }\r\n\r\n  handleTimeSearch = (selectedTime) => {\r\n    var url = this.state.baseurl;\r\n    var searchName = this.state.searchName\r\n    var locationquerystring = this.state.locationquerystring;\r\n    var longitudequerystring = this.state.longitudequerystring;\r\n    var latitudequerystring = this.state.latitudequerystring;\r\n    var cuisinequerystring = this.state.cuisinequerystring;\r\n    var occasionquerystring = this.state.occasionquerystring;\r\n    var price_ltequerystring = this.state.price_ltequerystring;\r\n    var price_gtquerystring = this.state.price_gtquerystring;\r\n    var datequerystring = this.state.datequerystring;\r\n    var timequerystring = this.state.timequerystring;\r\n    var catererName_querystring = this.state.catererName_querystring;\r\n\r\n    timequerystring = \"&time=\" + selectedTime;\r\n\r\n    if (searchName === \"\") {\r\n      catererName_querystring = \"\"\r\n    }\r\n    \r\n    url = url + locationquerystring + longitudequerystring + latitudequerystring + cuisinequerystring + occasionquerystring + price_gtquerystring + price_ltequerystring + datequerystring + timequerystring + catererName_querystring; \r\n    var fullapiurl = apis.GETcaterer + locationquerystring + longitudequerystring + latitudequerystring + cuisinequerystring + occasionquerystring + price_gtquerystring + price_ltequerystring + datequerystring + timequerystring + catererName_querystring;\r\n\r\n    this.setState({\r\n      loading: true,\r\n      locationquerystring,\r\n      longitudequerystring,\r\n      latitudequerystring,\r\n      cuisinequerystring,\r\n      occasionquerystring,\r\n      price_ltequerystring,\r\n      price_gtquerystring,\r\n      datequerystring,\r\n      timequerystring,\r\n      catererName_querystring,\r\n      fullapiurl,\r\n    },() => {\r\n      this.getDataFromDb(fullapiurl)\r\n      Router.replace(url, url, { shallow: true })\r\n    })\r\n  }\r\n\r\n  handleDateSearch = (selectedDate) => {\r\n    var url = this.state.baseurl;\r\n    var searchName = this.state.searchName\r\n    var locationquerystring = this.state.locationquerystring;\r\n    var longitudequerystring = this.state.longitudequerystring;\r\n    var latitudequerystring = this.state.latitudequerystring;\r\n    var cuisinequerystring = this.state.cuisinequerystring;\r\n    var occasionquerystring = this.state.occasionquerystring;\r\n    var price_ltequerystring = this.state.price_ltequerystring;\r\n    var price_gtquerystring = this.state.price_gtquerystring;\r\n    var datequerystring = this.state.datequerystring;\r\n    var timequerystring = this.state.timequerystring;\r\n    var catererName_querystring = this.state.catererName_querystring;\r\n   \r\n    datequerystring = \"&date=\" + selectedDate;\r\n\r\n    if (searchName === \"\") {\r\n      catererName_querystring = \"\"\r\n    }\r\n    \r\n    url = url + locationquerystring + longitudequerystring + latitudequerystring + cuisinequerystring + occasionquerystring + price_gtquerystring + price_ltequerystring + datequerystring + timequerystring + catererName_querystring; \r\n    var fullapiurl = apis.GETcaterer + locationquerystring + longitudequerystring + latitudequerystring + cuisinequerystring + occasionquerystring + price_gtquerystring + price_ltequerystring + datequerystring + timequerystring + catererName_querystring;\r\n\r\n    this.setState({\r\n      loading: true,\r\n      locationquerystring,\r\n      longitudequerystring,\r\n      latitudequerystring,\r\n      cuisinequerystring,\r\n      occasionquerystring,\r\n      price_ltequerystring,\r\n      price_gtquerystring,\r\n      datequerystring,\r\n      timequerystring,\r\n      catererName_querystring,\r\n      fullapiurl,\r\n    },() => {\r\n      Router.push(url, url, { shallow: true })\r\n      this.getDataFromDb(fullapiurl)\r\n    })\r\n  }\r\n\r\n  handleUrlChange = (queryname) => {\r\n    var url = this.state.baseurl;\r\n    var locationquerystring = this.state.locationquerystring;\r\n    var longitudequerystring = this.state.longitudequerystring;\r\n    var latitudequerystring = this.state.latitudequerystring;\r\n    var cuisinequerystring = this.state.cuisinequerystring;\r\n    var occasionquerystring = this.state.occasionquerystring;\r\n    var price_ltequerystring = this.state.price_ltequerystring;\r\n    var price_gtquerystring = this.state.price_gtquerystring;\r\n    var datequerystring = this.state.datequerystring;\r\n    var timequerystring = this.state.timequerystring;\r\n    var catererName_querystring = this.state.catererName_querystring;\r\n    var selectedArray;\r\n\r\n    if (queryname === 'occasion') {\r\n      occasionquerystring = \"\";\r\n      selectedArray = this.state.occasion;\r\n      for(var i = 0; i < selectedArray.length; i++)\r\n      {\r\n        if(selectedArray[i].value == true)\r\n        {\r\n          var fixedstr = \"&occasion=\"\r\n          occasionquerystring = occasionquerystring + fixedstr + selectedArray[i].name \r\n        }\r\n      }\r\n    }\r\n\r\n    if (queryname === 'cuisine') {\r\n      cuisinequerystring = \"\";\r\n      if (this.state.selectedCuisine !== \"All Cuisines\") {\r\n        cuisinequerystring = \"&cuisine=\" + this.state.selectedCuisine;\r\n      }\r\n    }\r\n\r\n    if (queryname === 'pricerange') {\r\n      var selectedPrice = this.state.selectedPrice\r\n      if (selectedPrice !== \"All\") {\r\n        if (selectedPrice === \"More than 500\") {\r\n          price_gtquerystring = \"\";\r\n          var pricenumber = selectedPrice.split(\"than \")[1];\r\n          price_gtquerystring = \"&price_gt=\" + pricenumber;\r\n          price_ltequerystring = \"\";\r\n        }\r\n        else {\r\n          var pricenumber = selectedPrice.split(\" (\")[0];\r\n          price_ltequerystring = \"&price_lte=\" + pricenumber;\r\n          price_gtquerystring = \"\";\r\n        }\r\n      }\r\n      else {\r\n        price_gtquerystring = \"\";\r\n        price_ltequerystring = \"\";\r\n      }\r\n    }\r\n\r\n    url = url + locationquerystring + longitudequerystring + latitudequerystring + cuisinequerystring + occasionquerystring + price_gtquerystring + price_ltequerystring + datequerystring + timequerystring + catererName_querystring;\r\n    var fullapiurl = apis.GETcaterer + locationquerystring + longitudequerystring + latitudequerystring + cuisinequerystring + occasionquerystring + price_gtquerystring + price_ltequerystring + datequerystring + timequerystring + catererName_querystring;\r\n\r\n    this.setState({\r\n      loading: true,\r\n      locationquerystring,\r\n      longitudequerystring,\r\n      latitudequerystring,\r\n      cuisinequerystring,\r\n      occasionquerystring,\r\n      price_ltequerystring,\r\n      price_gtquerystring,\r\n      datequerystring,\r\n      timequerystring,\r\n      catererName_querystring,\r\n      fullapiurl: fullapiurl,\r\n    },() => {\r\n      Router.replace(url, url, { shallow: true })\r\n      this.getDataFromDb(fullapiurl)\r\n    })\r\n  }\r\n\r\n  handleSearchNameChange(e) {\r\n    this.setState({\r\n      searchName: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleDateChange(date){\r\n\t\tthis.setState({ \r\n      selectedDate : moment(date).format(\"dddd, DD/MM/YY\") \r\n    }, () => {\r\n      this.toggleDropDown()\r\n      this.handleDateSearch(this.state.selectedDate)\r\n      sessionStorage.setItem('selectedDate', this.state.selectedDate);\r\n    })\r\n  }\r\n  \r\n  toggleCuisineDropDown = () => {\r\n    this.setState({\r\n      cuisineDropDownOpen: !this.state.cuisineDropDownOpen\r\n    });\r\n  };\r\n\r\n  toggleFilterModal = () => {\r\n    this.setState({\r\n      filterModalOpen: !this.state.filterModalOpen\r\n    });\r\n  };\r\n\r\n  removeFilterItem = (index) => { \r\n\r\n    var newfilterArray = this.state.filterArray\r\n    newfilterArray.splice(index, 1)\r\n\r\n    this.setState({\r\n      filterArray: newfilterArray\r\n    })\r\n  }\r\n\r\n  saveFilter = () => { \r\n    const {dietary, occasion, selectedCuisine, selectedPrice, filterArray} = this.state\r\n\r\n    var newfilterArray = [];\r\n\r\n    for(var i = 0; i < dietary.length; i++)\r\n    {\r\n      if(dietary[i].value == true)\r\n      {\r\n        newfilterArray.push(dietary[i].name)\r\n      }\r\n    }\r\n\r\n    for(var i = 0; i < occasion.length; i++)\r\n    {\r\n      if(occasion[i].value == true)\r\n      {\r\n        newfilterArray.push(occasion[i].name)\r\n      }\r\n    }\r\n\r\n    if (selectedCuisine != 'All Cuisines') {\r\n      newfilterArray.push(selectedCuisine)\r\n    }\r\n\r\n    if (selectedPrice != 'All') {\r\n      newfilterArray.push(selectedPrice)\r\n    }\r\n\r\n    this.setState({\r\n      filterArray: newfilterArray\r\n    },() => {\r\n      this.toggleFilterModal()\r\n    })\r\n\r\n  };\r\n\r\n\r\n  renderNavItem(cuisine) {\r\n    return (\r\n      <NavItem>\r\n        <NavLink\r\n          onClick={() => this.navItemClicked(cuisine)}\r\n          style={{\r\n            paddingRight: 20,\r\n            paddingLeft: cuisine === \"All Cuisines\" ? 0 : 20,\r\n            fontWeight: \"600\",\r\n            color: this.state.selectedCuisine === cuisine ? \"#20a8d8\" : \"black\",\r\n            fontSize: 15\r\n          }}\r\n          href=\"#\"\r\n        >\r\n          {\" \"}\r\n          {cuisine}\r\n        </NavLink>\r\n        <div\r\n          style={{\r\n            height: 2,\r\n            width: \"100%\",\r\n            backgroundColor:\r\n              this.state.selectedCuisine === cuisine ? \"#20a8d8\" : \"transparent\"\r\n          }}\r\n        />\r\n      </NavItem>\r\n    );\r\n  }\r\n\r\n  renderMoreCuisine(startindex, lastindex) {\r\n    var itemsarray = [];\r\n\r\n    var cuisine = this.state.cuisine;\r\n\r\n    for (let i = startindex; i < lastindex; i++) {\r\n      itemsarray.push(\r\n        <td key={i}>\r\n          <Button\r\n            onClick={() => this.navItemClicked(cuisine[i])}\r\n            block\r\n            color=\"ghost-link\"\r\n          >\r\n            {cuisine[i]}\r\n          </Button>\r\n        </td>\r\n      );\r\n    }\r\n\r\n    return <tr>{itemsarray}</tr>;\r\n  }\r\n\r\n  renderCuisine() {\r\n    var itemsarray = [];\r\n\r\n    var cuisine = this.state.cuisine;\r\n\r\n    for (let i = 0; i < cuisine.length; i++) {\r\n      itemsarray.push(\r\n        <Col key={i} xs={this.state.filterModalOpen ? \"6\" : \"12\"}>\r\n        <FormGroup style={{ paddingLeft: 0, marginTop: 10 }} check className=\"radio\">\r\n          <div className=\"pretty p-default p-round\">\r\n            <input \r\n              type=\"radio\" \r\n              name=\"radio1\"\r\n              checked={this.state.selectedCuisine === cuisine[i]}\r\n              onChange={this.handleCuisineChange}\r\n              value={cuisine[i]}\r\n              name={cuisine[i]}\r\n              style={{padding:0, marginRight: 10}} />\r\n            <div className=\"state p-success-o\">\r\n                <label></label>\r\n            </div>\r\n          </div>\r\n           \r\n          <Label check className=\"form-check-label\">\r\n            {cuisine[i]}\r\n          </Label>\r\n        </FormGroup>\r\n        </Col>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Row>\r\n        {itemsarray}\r\n      </Row>\r\n    );\r\n  }\r\n\r\n  renderPrice() {\r\n    var itemsarray = [];\r\n\r\n    var price = this.state.price;\r\n\r\n    for (let i = 0; i < price.length; i++) {\r\n      itemsarray.push(\r\n        <Col key={i} xs={this.state.filterModalOpen ? \"6\" : \"12\"}>\r\n        <FormGroup style={{ paddingLeft: 0, marginTop: 10 }} check className=\"radio\">\r\n\r\n          <div className=\"pretty p-default p-round\">\r\n            <input \r\n              type=\"radio\" \r\n              name=\"radio2\"\r\n              checked={this.state.selectedPrice === price[i]}\r\n              onChange={this.handlePriceChange}\r\n              value={price[i]}\r\n              name={price[i]}\r\n              style={{padding:0, marginRight: 10}} />\r\n            <div className=\"state p-success-o\">\r\n                <label></label>\r\n            </div>\r\n          </div>\r\n           \r\n          <Label check className=\"form-check-label\">\r\n            {price[i]}\r\n          </Label>\r\n        </FormGroup>\r\n        </Col>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Row>\r\n        {itemsarray}\r\n      </Row>\r\n    );\r\n  }\r\n\r\n  renderDietary() {\r\n    var itemsarray = [];\r\n\r\n    var dietary = this.state.dietary;\r\n\r\n    for (let i = 0; i < dietary.length; i++) {\r\n      itemsarray.push(\r\n        <Col key={i} xs={this.state.filterModalOpen ? \"6\" : \"12\"}>\r\n        <FormGroup style={{ paddingLeft: 0, marginTop: 10 }} check className=\"checkbox\">\r\n          <div className=\"pretty p-svg p-curve\">\r\n            <input \r\n              type=\"checkbox\"\r\n              checked={dietary[i].value}\r\n              onChange={(e) => this.handleCheckBoxChange(i, 'dietary', e)}\r\n              value={dietary[i].name}\r\n              style={{padding:0, marginRight: 10}} />\r\n            <div className=\"state p-success\">\r\n                <svg className=\"svg svg-icon\" viewBox=\"0 0 20 20\">\r\n                    <path d=\"M7.629,14.566c0.125,0.125,0.291,0.188,0.456,0.188c0.164,0,0.329-0.062,0.456-0.188l8.219-8.221c0.252-0.252,0.252-0.659,0-0.911c-0.252-0.252-0.659-0.252-0.911,0l-7.764,7.763L4.152,9.267c-0.252-0.251-0.66-0.251-0.911,0c-0.252,0.252-0.252,0.66,0,0.911L7.629,14.566z\" style={{stroke: 'white', fill: 'white'}}></path>\r\n                </svg>\r\n                <label></label>\r\n            </div>\r\n          </div>\r\n          \r\n          <Label check className=\"form-check-label\">\r\n            {dietary[i].name}\r\n          </Label>\r\n        </FormGroup>\r\n        </Col>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Row>\r\n        {itemsarray}\r\n      </Row>\r\n    );\r\n  }\r\n\r\n  renderOccasion() {\r\n    var itemsarray = [];\r\n\r\n    var occasion = this.state.occasion;\r\n\r\n    for (let i = 0; i < occasion.length; i++) {\r\n      itemsarray.push(\r\n        <Col key={i} xs={this.state.filterModalOpen ? \"6\" : \"12\"}>\r\n          <FormGroup style={{ paddingLeft: 0, marginTop: 10 }}check className=\"checkbox\">\r\n            <div className=\"pretty p-svg p-curve\">\r\n              <input \r\n                type=\"checkbox\"\r\n                checked={occasion[i].value}\r\n                onChange={(e) => this.handleCheckBoxChange(i, 'occasion', e)}\r\n                value={occasion[i].name}\r\n                style={{padding:0, marginRight: 10}} />\r\n              <div className=\"state p-success\">\r\n                  <svg className=\"svg svg-icon\" viewBox=\"0 0 20 20\">\r\n                      <path d=\"M7.629,14.566c0.125,0.125,0.291,0.188,0.456,0.188c0.164,0,0.329-0.062,0.456-0.188l8.219-8.221c0.252-0.252,0.252-0.659,0-0.911c-0.252-0.252-0.659-0.252-0.911,0l-7.764,7.763L4.152,9.267c-0.252-0.251-0.66-0.251-0.911,0c-0.252,0.252-0.252,0.66,0,0.911L7.629,14.566z\" style={{stroke: 'white', fill: 'white'}}></path>\r\n                  </svg>\r\n                  <label></label>\r\n              </div>\r\n            </div>\r\n            \r\n            <Label check className=\"form-check-label\">\r\n              {occasion[i].name}\r\n            </Label>\r\n          </FormGroup>\r\n        </Col>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Row>\r\n        {itemsarray}\r\n      </Row>\r\n    );\r\n  }\r\n\r\n  renderFilterModal() {\r\n    return(\r\n    <Modal isOpen={this.state.filterModalOpen} toggle={() => this.toggleFilterModal()}>\r\n      <ModalHeader toggle={() => this.toggleFilterModal()} style={{backgroundColor: 'rgba(211,211,211,0.5)', paddingLeft:30, paddingBottom: 0, paddingTop:10 }}>\r\n        <Label>Select Filter</Label>\r\n      </ModalHeader>\r\n      <ModalBody style={{marginBottom: 20}}>\r\n        <Col>\r\n          <h6\r\n            style={{\r\n              fontWeight: \"700\",\r\n              color: \"black\",\r\n              fontSize: 15,\r\n              marginBottom: 10,\r\n              marginTop: 0\r\n            }}\r\n          >\r\n            CUISINE\r\n          </h6>\r\n          {this.renderCuisine()}\r\n          <h6\r\n            style={{\r\n              fontWeight: \"700\",\r\n              color: \"black\",\r\n              fontSize: 15,\r\n              marginBottom: 10,\r\n              marginTop: 30\r\n            }}\r\n          >\r\n            OCCASION\r\n          </h6>\r\n          {this.renderOccasion()}\r\n         \r\n          <h6\r\n            style={{\r\n              fontWeight: \"700\",\r\n              color: \"black\",\r\n              fontSize: 15,\r\n              marginBottom: 10,\r\n              marginTop: 30\r\n            }}\r\n          >\r\n            PRICE\r\n          </h6>\r\n          {this.renderPrice()}\r\n        </Col>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <Button onClick={() => this.saveFilter()} style={{fontSize: 17}} color=\"primary\">Save Filter</Button>\r\n      </ModalFooter>\r\n    </Modal>\r\n    )\r\n  }\r\n\r\n  renderEmptyItems() {\r\n    return (\r\n      <Row style={{ paddingLeft: 20, paddingRight: 20, marginTop: 50 }}>\r\n        <Col style={{ textAlign: \"center\" }} xs=\"12\">\r\n          <img\r\n            style={{\r\n              objectFit: \"cover\",\r\n              width: 70,\r\n              height: 70,\r\n              opacity: 0.6\r\n            }}\r\n            alt={\"\"}\r\n            src={\r\n              \"https://cdn0.iconfinder.com/data/icons/huge-black-icons/512/Find.png\"\r\n            }\r\n          />\r\n        </Col>\r\n        <Col style={{ textAlign: \"center\" }} xs=\"12\">\r\n          <p\r\n            style={{ fontSize: 18, letterSpacing: 2, marginTop: 30 }}\r\n            className=\"big\"\r\n          >\r\n            NO CATERER IS AVAILABLE FOR THIS SEARCH.\r\n          </p>\r\n        </Col>\r\n        <Col style={{ textAlign: \"center\" }} xs=\"12\">\r\n          <p\r\n            style={{ fontSize: 15, opacity: 0.8, marginTop: 10, paddingLeft:20, paddingRight: 20 }}\r\n            className=\"big\"\r\n          >\r\n            We recommend you to make special request to our team by contacting us at foodiebeeie@gmail.com. We will make response to you as soon as possible.\r\n          </p>\r\n        </Col>\r\n      \r\n      </Row>\r\n    );\r\n  }\r\n\r\n  renderLoadingItems() {\r\n    var itemsarray = [];\r\n\r\n    for (let i = 0; i < 6; i++) {\r\n      itemsarray.push(\r\n        <Col key={i} xs=\"12\" sm=\"6\" md=\"4\" lg=\"4\">\r\n          <ContentLoader height=\"400\">\r\n            <rect x=\"0\" y=\"0\" rx=\"6\" ry=\"6\" width=\"100%\" height=\"200\" />\r\n            <rect x=\"0\" y=\"240\" rx=\"4\" ry=\"4\" width=\"300\" height=\"13\" />\r\n            <rect x=\"0\" y=\"260\" rx=\"3\" ry=\"3\" width=\"250\" height=\"10\" />\r\n            <rect x=\"0\" y=\"280\" rx=\"2\" ry=\"2\" width=\"100%\" height=\"20\" />\r\n          </ContentLoader>\r\n        </Col>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Row\r\n        style={{\r\n          marginTop: 10\r\n        }}\r\n      >\r\n        {itemsarray}\r\n      </Row>\r\n    );\r\n  }\r\n\r\n  renderFilterItems() {\r\n    var itemsarray = [];\r\n\r\n    var filterArray = this.state.filterArray;\r\n\r\n    for (let i = 0; i < filterArray.length; i++) {\r\n      itemsarray.push(\r\n        <span\r\n          key={i} \r\n          style={{\r\n            borderWidth: 1.5,\r\n            color: \"black\",\r\n            borderRadius: 15,\r\n            backgroundColor: \"rgba(211,211,211, 0.5)\",\r\n            padding: 10,\r\n            textAlign: \"center\",\r\n            marginLeft: 10,\r\n            marginRight: 10,\r\n            marginBottom: 10\r\n          }}\r\n        >\r\n          {filterArray[i]}\r\n          <i onClick={() => this.removeFilterItem(i)} style={{cursor: 'pointer', paddingLeft: 10}} className=\"fa fa-close\"></i>\r\n        </span>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Row\r\n        className=\"justify-content-center\"\r\n        style={{\r\n          marginTop: 10,\r\n          padding: 0\r\n        }}\r\n      >\r\n        {itemsarray}\r\n      </Row>\r\n    );\r\n  }\r\n\r\n  renderItems() {\r\n    var itemsarray = [];\r\n\r\n    var caterer = this.state.caterer;\r\n\r\n    for (let i = 0; i < caterer.length; i++) {\r\n      itemsarray.push(\r\n        <Col key={i} xs=\"12\" sm=\"6\" md=\"4\" lg=\"4\">\r\n          <Card\r\n            style={{\r\n              cursor: \"pointer\",\r\n              backgroudColor: \"rgba(220,220,220, 0.5)\",\r\n              borderWidth: 0,\r\n              borderColor: \"white\",\r\n              boxShadow: \"none\"\r\n            }}\r\n            onClick={() => this.catererClicked(caterer[i]._id)}\r\n          >\r\n            <CardBody style={{ padding: 0 }}>\r\n              <img\r\n                style={{\r\n                  objectFit: \"cover\",\r\n                  width: \"100%\",\r\n                  height: 150,\r\n                  display: \"inline\"\r\n                }}\r\n                src={typeof caterer[i].coversrc !== 'undefined' ? caterer[i].coversrc : \"https://stmed.net/sites/default/files/food-wallpapers-28249-101905.jpg\" }\r\n              />\r\n\r\n              <b\r\n                style={{\r\n                  marginTop: 10,\r\n                  height: 30,\r\n                  display: \"inline-block\",\r\n                  textOverflow: \"ellipsis\",\r\n                  overflow: \"hidden\",\r\n                  whiteSpace: \"nowrap\",\r\n                  paddingLeft: 0,\r\n                  maxWidth: 300,\r\n                  width: \"100%\",\r\n                  textAlign: \"start\",\r\n                  fontSize: 17\r\n                }}\r\n              >\r\n                {caterer[i].catererName}\r\n              </b>\r\n\r\n              <Row\r\n                style={{ paddingLeft: 15, paddingRight: 0, marginBottom: 5 }}\r\n              >\r\n                <StarRatingComponent\r\n                  name=\"rate1\"\r\n                  emptyStarColor=\"#D3D3D3\"\r\n                  starCount={5}\r\n                  editing={false}\r\n                  value={caterer[i].rating}\r\n                />\r\n                {typeof caterer[i].rating === 'undefined' || caterer[i].rating === 0 ?  null : \r\n                <b style={{ marginLeft: 5, color: \"darkorange\" }}>\r\n                  {caterer[i].rating}\r\n                </b>}\r\n                {typeof caterer[i].numofreview === 'undefined' || caterer[i].numofreview === 0 ?  \r\n                <Label style={{ fontWeight: '500', marginLeft: 5, color: \"darkorange\" }}>\r\n                  No Ratings Yet\r\n                </Label>\r\n                :\r\n                <Label style={{ fontWeight: '500', marginLeft: 5, color: \"darkorange\" }}>\r\n                  ({caterer[i].numofreview})\r\n                </Label>}\r\n              </Row>\r\n\r\n              <Table style={{ margin: 0 }} borderless>\r\n                <tbody>\r\n                  <tr>\r\n                    <td\r\n                      style={{ padding: 0, width: \"40%\", textAlign: \"start\" }}\r\n                    >\r\n                      <img\r\n                        style={{\r\n                          objectFit: \"cover\",\r\n                          width: 20,\r\n                          height: 20,\r\n                          display: \"inline\",\r\n                          marginRight: 5\r\n                        }}\r\n                        alt={\"\"}\r\n                        src={\r\n                          \"https://cdn0.iconfinder.com/data/icons/webshop-essentials/100/shopping-cart-512.png\"\r\n                        }\r\n                      />\r\n                      <b style={{ color: \"#20a8d8\" }}>\r\n                        €{Number(caterer[i].minimumspend).toFixed(2)}\r\n                      </b>\r\n                    </td>\r\n                    <td\r\n                      style={{ padding: 0, width: \"60%\", textAlign: \"start\" }}\r\n                    >\r\n                      <img\r\n                        style={{\r\n                          objectFit: \"cover\",\r\n                          width: 23,\r\n                          height: 23,\r\n                          display: \"inline\",\r\n                          marginRight: 5\r\n                        }}\r\n                        alt={\"\"}\r\n                        src={\r\n                          \"https://cdn0.iconfinder.com/data/icons/e-commerce-mini-icons/32/Commerce_Mini_Icons-19-512.png\"\r\n                        }\r\n                      />\r\n                      <b style={{ color: \"green\" }}>\r\n                        €{Number(caterer[i].deliveryfee).toFixed(2)}\r\n                      </b>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </Table>\r\n\r\n              <Dotdotdot clamp={2}>\r\n                <p\r\n                  style={{\r\n                    overflow: \"hidden\",\r\n                    textAlign: \"start\",\r\n                    marginTop: 10,\r\n                    opacity: 0.8\r\n                  }}\r\n                >\r\n                  {caterer[i].catererDescrip}\r\n                </p>\r\n              </Dotdotdot>\r\n              \r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Row\r\n        style={{\r\n          marginTop: 10\r\n        }}\r\n      >\r\n        {itemsarray}\r\n      </Row>\r\n    );\r\n  }\r\n\r\n  renderTopSearchBar() {\r\n    return (\r\n      <div>\r\n      <Container>\r\n          <Row style={{ paddingTop: 20, paddingBottom: 10}}>\r\n            <Col xs=\"8\">\r\n              <FormGroup>\r\n                <h6>Delivered To</h6>\r\n                <UncontrolledDropdown isOpen={this.state.dropDownAddress}  toggle={() => this.toggleDropDownAddress()}>\r\n                  <DropdownToggle\r\n                    style={{\r\n                      height: 40,\r\n                      width: '100%',\r\n                      color: \"rgba(0,0,0, 0.5)\",\r\n                      borderColor: \"rgba(211,211,211, 0.5)\",\r\n                      backgroundColor: \"white\",\r\n                    }}\r\n                    caret\r\n                  >\r\n                  \r\n                  <Label style={{ padding:0, margin: 0, cursor: \"pointer\", overflow: \"hidden\", fontSize: 15, marginRight:5, textAlign:'start', color: this.state.location === \"\" ? 'gray' : 'black', width: '90%' }}>\r\n                  {this.state.location}\r\n                  </Label>\r\n                  \r\n                  </DropdownToggle>\r\n                  <DropdownMenu style={{width: '100%'}}>\r\n                    <Row style={{width: '100%'}}>\r\n                      <Col style={{paddingRight: 0}} xs=\"10\">\r\n                        <AutoCompleteAddress \r\n                          borderTopRightRadius={5}\r\n                          borderBottomRightRadius = {5}\r\n                          borderTopLeftRadius={5}\r\n                          borderBottomLeftRadius={5}\r\n                          borderColor = 'rgba(211,211,211, 0.5)'\r\n                          paddingLeft = {10}\r\n                          paddingRight = {10}\r\n                          paddingTop = {5}\r\n                          paddingBottom = {5}\r\n                          fontSize = {15}\r\n                          color = 'black'\r\n                          height = {40}\r\n                          onPlaceChanged={this.showPlaceDetails.bind(this)} />\r\n                      </Col>\r\n                      <Col xs=\"2\">\r\n                        <Button onClick={() => this.saveAddress()} style={{ height: '100%'}} className=\"bg-primary\" color=\"primary\">Save</Button>\r\n                      </Col>\r\n                    </Row>\r\n                  </DropdownMenu>\r\n                </UncontrolledDropdown>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col xs=\"4\">\r\n              <Button  outline onClick={() => this.searchBarToggle()} block style={{marginTop: 25, height: '50%', fontWeight: '700', }} color=\"primary\"> {this.state.isSearchBarOpen? \"HIDE\" : \"SHOW\"}</Button>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Collapse isOpen={this.state.isSearchBarOpen}>\r\n            <Row>\r\n              <Col xs=\"6\">\r\n                <FormGroup>\r\n                  <h6>When</h6>\r\n                  <UncontrolledDropdown id=\"Popover2\" isOpen={this.state.dropDownDate}  toggle={() => this.toggleDropDown()}>\r\n                    <DropdownToggle\r\n                      style={{\r\n                        height: 40,\r\n                        width: '100%',\r\n                        color: \"rgba(0,0,0, 0.5)\",\r\n                        borderColor: \"rgba(211,211,211, 0.5)\",\r\n                        backgroundColor: \"white\",\r\n                      }}\r\n                      caret\r\n                    >\r\n\r\n                       <Label style={{ padding:0, margin: 0, cursor: \"pointer\", overflow: \"hidden\", fontSize: 15, marginRight:5, textAlign:'start', color: this.state.selectedDate === \"\" ? 'gray' : 'black', width: '90%' }}>\r\n                        {this.state.selectedDate === \"\" ? 'Select Date' : this.state.selectedDate}\r\n                      </Label>\r\n\r\n                    </DropdownToggle>\r\n                    <DropdownMenu>\r\n                      <div >\r\n                        <Calendar\r\n                          onChange={this.handleDateChange.bind(this)}\r\n                          minDate={this.state.maxDate}\r\n                        />\r\n                      </div>\r\n                    </DropdownMenu>\r\n                  </UncontrolledDropdown>\r\n\r\n                  <Popover placement=\"bottom\" isOpen={this.state.mobile_dateEmptyPopoverOpen} target=\"Popover2\" >\r\n                    <PopoverHeader style={{color: 'red'}}>Select Date</PopoverHeader>\r\n                    <PopoverBody>Please select date of catering event</PopoverBody>\r\n                  </Popover>\r\n\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"6\">\r\n                <FormGroup>\r\n                  <h6>Time</h6>\r\n                  <Input id=\"Popover1\" value={this.state.selectedTime} onChange={(e) => this.handleTimeChange(e)} style={{cursor: 'pointer', color: this.state.selectedTime === \"\" ? 'gray': 'black', fontSize: 15, height: 40, backgroudColor: 'white'}} type=\"select\">\r\n                    <option value='' disabled>Select Time</option>\r\n                    {this.time.map(time =>\r\n                      <option style={{color:'black'}} key={time} value={time}>{time}</option>\r\n                    )}\r\n                  </Input>\r\n                </FormGroup>\r\n                <Popover placement=\"bottom\" isOpen={this.state.mobile_timeEmptyPopoverOpen} target=\"Popover1\" >\r\n                  <PopoverHeader style={{color: 'red'}}>Select Time</PopoverHeader>\r\n                  <PopoverBody>Please select the arrival time of caterings</PopoverBody>\r\n                </Popover>\r\n              </Col>\r\n            </Row>\r\n          </Collapse>\r\n      </Container>\r\n      <div style={{height: 1, backgroundColor: 'gray', opacity: 0.3}}></div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const cuisinelength = this.state.cuisine.length;\r\n    const slicedCuisine = this.state.cuisine.slice(4, cuisinelength)\r\n\r\n    return (\r\n      <Layout title={this.state.location === \"\" || typeof this.state.location === \"undefined\" ? 'Caterers Nearby' : this.state.location + \" Caterers Nearby\"}>\r\n      <NextSeo\r\n        config={{\r\n          title: this.state.location === \"\" || typeof this.state.location === \"undefined\" ? 'Caterers Nearby' : this.state.location + \" Caterers Nearby\",\r\n        }}\r\n      />\r\n      \r\n      <div ref={this.refObj} style={{backgroundColor: 'white'}}>\r\n         <NavBar signIn={e=>this.signIn(e)}/>\r\n\r\n         {this.state.isMobile ? this.renderTopSearchBar() : null}\r\n\r\n      <div className=\"app align-items-center\">\r\n       \r\n        <Container>\r\n          <Row style={{marginTop: 20, marginBottom: 50}} className=\"justify-content-center\">\r\n            {!this.state.isMobile ? \r\n            <Col xs=\"12\" md=\"12\">\r\n              <Card style={{backgroundColor: 'rgba(211,211,211,0.1)', boxShadow: '1px 1px 1px #9E9E9E'}}>\r\n              <CardBody style={{paddingTop: 15, paddingBottom: 0,}}>\r\n                <Row>\r\n                  <Col xs=\"12\" md=\"5\">\r\n                    <FormGroup>\r\n                      <h6>Delivered To</h6>\r\n                      <UncontrolledDropdown isOpen={this.state.dropDownAddress}  toggle={() => this.toggleDropDownAddress()}>\r\n                        <DropdownToggle\r\n                          style={{\r\n                            height: 40,\r\n                            width: '100%',\r\n                            color: \"rgba(0,0,0, 0.5)\",\r\n                            borderColor: \"rgba(211,211,211, 0.5)\",\r\n                            backgroundColor: \"white\",\r\n                          }}\r\n                          caret\r\n                        > \r\n                       \r\n                          <Label style={{ padding:0, margin: 0, cursor: \"pointer\", overflow: \"hidden\", fontSize: 15, marginRight:5, textAlign:'start', color: this.state.location === \"\" ? 'gray' : 'black', width: '90%' }}>\r\n                          {this.state.location}\r\n                          </Label>\r\n                        \r\n                        </DropdownToggle>\r\n                        <DropdownMenu style={{width: '100%'}}>\r\n                          <Row style={{width: '100%'}}>\r\n                            <Col style={{paddingRight: 0}} xs=\"10\">\r\n                              <AutoCompleteAddress \r\n                                borderRadius = {5}\r\n                                borderColor = 'rgba(211,211,211, 0.5)'\r\n                                paddingLeft = {10}\r\n                                paddingRight = {10}\r\n                                paddingTop = {5}\r\n                                paddingBottom = {5}\r\n                                fontSize = {15}\r\n                                color = 'black'\r\n                                height = {40}\r\n                                onPlaceChanged={this.showPlaceDetails.bind(this)} />\r\n                            </Col>\r\n                            <Col xs=\"2\">\r\n                              <Button onClick={() => this.saveAddress()} style={{ height: '100%'}} className=\"bg-primary\" color=\"primary\">Save</Button>\r\n                            </Col>\r\n                          </Row>\r\n                        </DropdownMenu>\r\n                      </UncontrolledDropdown>\r\n                      \r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col xs=\"6\" md=\"4\">\r\n                    <FormGroup>\r\n                      <h6>When</h6>\r\n                      <UncontrolledDropdown id=\"Popover2\" isOpen={this.state.dropDownDate}  toggle={() => this.toggleDropDown()}>\r\n                        <DropdownToggle\r\n                          style={{\r\n                            height: 40,\r\n                            width: '100%',\r\n                            color: \"rgba(0,0,0, 0.5)\",\r\n                            borderColor: \"rgba(211,211,211, 0.5)\",\r\n                            backgroundColor: \"white\",\r\n                          }}\r\n                          caret\r\n                        >\r\n\r\n                         <Label style={{ padding:0, margin: 0, cursor: \"pointer\", overflow: \"hidden\", fontSize: 15, marginRight:5, textAlign:'start', color: this.state.selectedDate === \"\" ? 'gray' : 'black', width: '90%' }}>\r\n                         {this.state.selectedDate === \"\" ? 'Select Date' : this.state.selectedDate}\r\n                        </Label>\r\n\r\n                        </DropdownToggle>\r\n                        <DropdownMenu >\r\n                          <div >\r\n                            <Calendar\r\n                              onChange={this.handleDateChange.bind(this)}\r\n                              minDate={this.state.maxDate}\r\n                            />\r\n                          </div>\r\n                        </DropdownMenu>\r\n                      </UncontrolledDropdown>\r\n                    </FormGroup>\r\n\r\n                     <Popover placement=\"bottom\" isOpen={this.state.dateEmptyPopoverOpen} target=\"Popover2\" >\r\n                      <PopoverHeader style={{color: 'red'}}>Select Date</PopoverHeader>\r\n                      <PopoverBody>Please select date of catering event</PopoverBody>\r\n                    </Popover>\r\n\r\n                  </Col>\r\n                  <Col xs=\"6\" md=\"3\">\r\n                    <FormGroup >\r\n                      <h6>Time</h6>\r\n                      <Input id=\"Popover1\" value={this.state.selectedTime} onChange={(e) => this.handleTimeChange(e)} style={{cursor: 'pointer', color: this.state.selectedTime === \"\" ? 'gray': 'black', fontSize: 15, height: 40, backgroudColor: 'white'}} type=\"select\">\r\n                        <option value='' disabled>Select Time</option>\r\n                        {this.time.map(time =>\r\n                          <option style={{color:'black'}} key={time} value={time}>{time}</option>\r\n                        )}\r\n                      </Input>\r\n                    </FormGroup>\r\n\r\n                    <Popover placement=\"bottom\" isOpen={this.state.timeEmptyPopoverOpen} target=\"Popover1\" >\r\n                      <PopoverHeader style={{color: 'red'}}>Select Time</PopoverHeader>\r\n                      <PopoverBody>Please select the arrival time of caterings</PopoverBody>\r\n                    </Popover>\r\n\r\n                  </Col>\r\n                \r\n                </Row>\r\n              </CardBody>\r\n              </Card>\r\n            </Col>\r\n            :\r\n            null}\r\n\r\n            <Col style={{marginTop: 20}} xs=\"12\">\r\n              <h2 style={{ textAlign: 'center', fonWeight:'700', fontSize: 30, paddingLeft:10, paddingRight: 10}}>6 Caterers Available</h2>\r\n            </Col>\r\n\r\n            {!this.state.isMobile ? \r\n            <Col style={{ marginTop: 25}} xs=\"12\" md=\"4\">\r\n              <Form action=\"\" method=\"post\" className=\"form-horizontal\">\r\n                <FormGroup row>\r\n                  <Col md=\"12\">\r\n                    <InputGroup >\r\n                      <Input onChange={e => this.handleSearchNameChange(e)} value={this.state.searchName} style={{ borderWidth:1.5, color:'black', fontSize: 15, height: 40, borderTopLeftRadius: 15, borderBottomLeftRadius: 15}} type=\"text\" id=\"input1-group2\" name=\"input1-group2\" placeholder=\"Caterer, Cuisine etc\" />      \r\n                      <InputGroupAddon addonType=\"prepend\">\r\n                        <Button onClick={() => this.searchNameClicked()} style={{borderTopRightRadius: 15, borderBottomRightRadius: 15}}  type=\"button\" color=\"primary\"><i className=\"fa fa-search\"></i></Button>\r\n                      </InputGroupAddon>\r\n                    </InputGroup>\r\n                  </Col>\r\n                </FormGroup>\r\n              </Form>\r\n            </Col>\r\n            : \r\n            null}\r\n\r\n            {!this.state.isMobile ? \r\n            <Col style={{ marginTop: 20, }} xs=\"12\" md=\"8\">\r\n                <Nav style={{paddingLeft:50,}} className=\"float-right\" pills>\r\n                  {this.renderNavItem(this.state.cuisine[0])}\r\n                  {this.renderNavItem(this.state.cuisine[1])}\r\n                  {this.renderNavItem(this.state.cuisine[2])}\r\n                  {this.renderNavItem(this.state.cuisine[3])}\r\n \r\n                  <NavItem>\r\n                    <Dropdown\r\n                      nav\r\n                      isOpen={this.state.cuisineDropDownOpen}\r\n                      toggle={() => {\r\n                        this.toggleCuisineDropDown();\r\n                      }}\r\n                    >\r\n                      <DropdownToggle\r\n                        style={{\r\n                          fontWeight: \"600\",\r\n                          color: slicedCuisine.includes( this.state.selectedCuisine ) || this.state.cuisineDropDownOpen ? \"#20a8d8\" : \"black\",\r\n                          backgroundColor: \"white\",\r\n                          fontSize: 15\r\n                        }}\r\n                        nav\r\n                        caret\r\n                      >\r\n                        {slicedCuisine.includes(this.state.selectedCuisine) ? this.state.selectedCuisine : \"More\"}\r\n                      </DropdownToggle>\r\n                      <DropdownMenu right style={{ right: 0, left: 'auto' }}>\r\n                        <Table style={{ marginRight: 0 }} borderless>\r\n                          <tbody>\r\n                            {this.renderMoreCuisine(4, 10)}\r\n                            {this.renderMoreCuisine(10, 16)}\r\n                            {this.renderMoreCuisine(16, 22)}\r\n                            {this.renderMoreCuisine(22, 28)}\r\n                          </tbody>\r\n                        </Table>\r\n                      </DropdownMenu>\r\n                    </Dropdown>\r\n                    <div\r\n                      style={{\r\n                        height: 2,\r\n                        width: \"100%\",\r\n                        backgroundColor: slicedCuisine.includes( this.state.selectedCuisine ) ? \"#20a8d8\" : \"transparent\"\r\n                      }}\r\n                    />\r\n                  </NavItem>\r\n                </Nav>\r\n              </Col>\r\n              : \r\n              null}\r\n\r\n              {this.state.isMobile ? \r\n              <Col\r\n                style={{ textAlign: \"center\", marginTop: 15 }}\r\n                xs=\"12\"\r\n              >\r\n                <Row>\r\n                  <Col xs=\"12\" sm=\"8\" md=\"8\" lg=\"8\">\r\n                    <Form action=\"\" method=\"post\" className=\"form-horizontal\">\r\n                      <FormGroup row>\r\n                        <Col md=\"12\">\r\n                          <InputGroup>\r\n                            <Input\r\n                              style={{\r\n                                borderWidth: 1.5,\r\n                                color: \"black\",\r\n                                fontSize: 15,\r\n                                height: 40,\r\n                                borderTopLeftRadius: 15,\r\n                                borderBottomLeftRadius: 15\r\n                              }}\r\n                              type=\"text\"\r\n                              id=\"input1-group2\"\r\n                              name=\"input1-group2\"\r\n                              placeholder=\"Caterer, Cuisine etc\"\r\n                              onChange={e => this.handleSearchNameChange(e)} \r\n                              value={this.state.searchName}\r\n                            />\r\n                            <InputGroupAddon addonType=\"prepend\">\r\n                              <Button\r\n                                style={{\r\n                                  borderTopRightRadius: 15,\r\n                                  borderBottomRightRadius: 15\r\n                                }}\r\n                                type=\"button\"\r\n                                color=\"primary\"\r\n                                onClick={() => this.searchNameClicked()} \r\n                              >\r\n                                <i className=\"fa fa-search\" />\r\n                              </Button>\r\n                            </InputGroupAddon>\r\n                          </InputGroup>\r\n                        </Col>\r\n                      </FormGroup>\r\n                    </Form>\r\n                  </Col>\r\n\r\n                  <Col xs=\"12\" sm=\"4\" md=\"4\" lg=\"4\">\r\n                    <Button onClick={() => this.toggleFilterModal()} block style={{ paddingTop:8, paddingBottom:8, borderRadius: 5 }} color=\"primary\">\r\n                      Add Filters &nbsp;\r\n                      <i className=\"fa fa-filter\" />\r\n                    </Button>\r\n                  </Col>\r\n                 \r\n                </Row>\r\n              </Col>\r\n              :\r\n              null}\r\n\r\n              {this.state.isMobile ? \r\n              <Col style={{ marginTop: 20 }} xs=\"12\">\r\n                {this.state.filterArray.length === 0 ? null : this.renderFilterItems()}\r\n              </Col>\r\n              :\r\n              null}\r\n\r\n              {!this.state.isMobile ? \r\n              <Col xs=\"0\" md=\"2\">\r\n                <h6\r\n                  style={{\r\n                    fontWeight: \"700\",\r\n                    color: \"black\",\r\n                    fontSize: 15,\r\n                    marginBottom: 10,\r\n                    marginTop: 20\r\n                  }}\r\n                >\r\n                  OCCASION\r\n                </h6>\r\n                {this.renderOccasion()}\r\n              \r\n                <h6\r\n                  style={{\r\n                    fontWeight: \"700\",\r\n                    color: \"black\",\r\n                    fontSize: 15,\r\n                    marginBottom: 10,\r\n                    marginTop: 30\r\n                  }}\r\n                >\r\n                  PRICE\r\n                </h6>\r\n                {this.renderPrice()}\r\n              </Col>\r\n              :\r\n              null}\r\n\r\n              <Col style={{ marginTop: 20 }} xs=\"12\" md=\"10\">\r\n                {this.state.loading ? this.renderLoadingItems() : this.state.empty ?  this.renderEmptyItems() : this.renderItems()}\r\n              </Col>\r\n\r\n          </Row>\r\n        </Container>\r\n        {this.renderFilterModal()}\r\n      </div>\r\n      <Footer />\r\n      </div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(SearchCaterer);\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;;;;;;;AA4LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBA;AAsBA;;;;;;;;;;;;;AAjNA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;;AADA;;AACA;AACA;;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;AACA;;;;;;;;;;;;;;;;;AAyDA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAVA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AA8MA;AAGA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAjOA;AAmOA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAIA;AACA;AAlQA;AA2RA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAjSA;AAmSA;AACA;AADA;AAGA;AACA;AAvSA;AAySA;AACA;AADA;AAGA;AACA;AA7SA;AAmTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAgBA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAlWA;AAoWA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AA3WA;AA6WA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AADA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AADA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AA9YA;AA4ZA;AAEA;AADA;AAGA;AACA;AAEA;AACA;AApaA;AAsaA;AAEA;AADA;AAGA;AACA;AAEA;AACA;AA9aA;AAibA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AApcA;AAscA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AA/eA;AAifA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAzhBA;AA2hBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAnkBA;AAqkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAhpBA;AAkqBA;AACA;AADA;AAGA;AACA;AAtqBA;AAwqBA;AACA;AADA;AAGA;AACA;AA5qBA;AA+qBA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AAtrBA;AAurBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AAEA;AACA;AAxtBA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhJA;AAmJA;AAxJA;AAyJA;AACA;;;AAEA;AAAA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AADA;AACA;AAGA;AACA;AACA;AADA;AAGA;AACA;AACA;AAGA;AACA;AADA;AAGA;AAKA;;;;;;;;;;;;;;;;;;AAmBA;;;AAyDA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;;;AAsBA;AACA;AAAA;AAAA;AACA;;;AA+FA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AACA;AAAA;AACA;AACA;;;AAwPA;AACA;AACA;AADA;AAGA;;;AAEA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AACA;;;AA8DA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AACA;AACA;AACA;AAHA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;AAEA;AAAA;AACA;AAAA;AAEA;AACA;AAJA;AAMA;AACA;AAAA;AAAA;AAA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","sourceRoot":""}